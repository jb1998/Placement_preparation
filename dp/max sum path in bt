/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public int helper(TreeNode A,int arr[]) {
    if(A==null){
        return 0;
    }
    int left=helper(A.left,arr);
    int right=helper(A.right,arr);
     int current = Math.max(node.val, Math.max(node.val + left, node.val + right));
        max[0] = Math.max(max[0], Math.max(current, left + node.val + right));
        return current;
    int max=Math.max(Math.max((left+A.val),(right+A.val)),A.val);
        arr[0]=Math.max(arr[0],Math.max(max,left+right+A.val));
        return max;
    }
    public int maxPathSum(TreeNode A) {
    int arr[]=new int[1];
    arr[0]=Integer.MIN_VALUE;
    return helper(A,arr);
        
    }
}
