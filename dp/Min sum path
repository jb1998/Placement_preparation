public class Solution {
    
	public static int minCostPath(int input[][]) {
	    int dp[][]=new int[input.length][input[0].length];
        dp[0][0]=input[0][0];
        for(int i=1;i<input.length;i++){
            dp[i][0]=input[i][0]+dp[i-1][0];
        }
        for(int i=1;i<input[0].length;i++){
            dp[0][i]=input[0][i]+dp[0][i-1];
        }
        for(int i=1;i<input.length;i++){
            for(int j=1;j<input[0].length;j++){
                    // System.out.print(Math.min(Math.min(input[i-1][j],input[i][j-1]),input[i-1][j-1])+" "+input[i][j]+" uhu");

                dp[i][j]=Math.min(Math.min(dp[i-1][j],dp[i][j-1]),dp[i-1][j-1])+input[i][j];
            }
        }
        // for(int i=0;i<input.length;i++){
        //     for(int j=0;j<input[0].length;j++){
        //         System.out.print(dp[i][j]+" ");
        //     }
        //     System.out.println();
        // }
        
        return dp[input.length-1][input[0].length-1];
	}
}
